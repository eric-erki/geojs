{
  "name": "geojs",
  "version": "0.18.1",
  "description": "JavaScript Geo visualization and Analysis Library",
  "homepage": "https://github.com/OpenGeoscience/geojs",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/OpenGeoscience/geojs/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/OpenGeoscience/geojs"
  },
  "dependencies": {
    "earcut": "^2.1.1",
    "gl-mat3": "^1.0.0",
    "gl-mat4": "^1.1.4",
    "gl-vec3": "^1.0.3",
    "gl-vec4": "^1.0.1",
    "jquery": "^3.3",
    "kdbush": "^1.0.1",
    "mousetrap": "^1.6.0",
    "proj4": "^2.4.4",
    "vgl": "0.3.10"
  },
  "optionalDependencies": {
    "d3": "^3.5.16",
    "hammerjs": "^2.0.8"
  },
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.5",
    "babel-plugin-istanbul": "^4.1.6",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "body-parser": "^1.15.0",
    "bootstrap": "^3.3.6",
    "bootswatch": "^3.3.6",
    "bowser": "^1.4.6",
    "codecov": "^3.0.1",
    "codemirror": "^5.15.2",
    "colorbrewer": "^1.0.0",
    "css-loader": "^0.28.11",
    "docco": "^0.7.0",
    "eslint": "^5.5.0",
    "eslint-config-semistandard": "^12.0.1",
    "eslint-config-standard": "^11.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^4.0.0",
    "eslint-plugin-standard": "^4.0.0",
    "exports-loader": "^0.7.0",
    "expose-loader": "^0.7.5",
    "express": "^4.13.4",
    "file-loader": "^1.1.11",
    "forever": "^0.15.2",
    "fs-extra": "^6.0.1",
    "glob": "^7.0.3",
    "imports-loader": "^0.8.0",
    "istanbul-combine": "^0.3.0",
    "istanbul-instrumenter-loader": "^3.0.1",
    "jaguarjs-jsdoc": "^1.0.2",
    "jasmine-core": "^3.1.0",
    "js-yaml": "^3.10.0",
    "jsdoc": "^3.5",
    "jsdoc-autoprivate": "0.0.1",
    "jstransformer-markdown-it": "^2.0.0",
    "karma": "^2.0.2",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-firefox-launcher": "^1.1.0",
    "karma-jasmine": "^1.0.2",
    "karma-jasmine-html-reporter": "^1.1.0",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-phantomjs-shim": "^1.5.0",
    "karma-sinon": "^1.0.4",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-spec-reporter": "^0.0.32",
    "karma-webpack": "^3.0.0",
    "marked": "^0.4.0",
    "nib": "^1.1.2",
    "pako": "^1.0.6",
    "phantomjs-prebuilt": "^2.1.5",
    "pug": "^2.0.3",
    "pug-lint": "^2.4.0",
    "pug-loader": "^2.4.0",
    "raw-body": "^2.1.6",
    "resemblejs": "^2.9.0",
    "serve-index": "^1.9.1",
    "sinon": "^1.17.3",
    "string-replace-webpack-plugin": "^0.1.3",
    "style-loader": "^0.21.0",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.2",
    "touch-emulator": "^1.0.0",
    "typeface-lato": "^0.0.54",
    "uglifyjs-webpack-plugin": "^1.2.5",
    "url-loader": "^1.0.1",
    "webpack": "^3.12.0",
    "webpack-cli": "^2.1.3",
    "webpack-merge": "^4.1.4",
    "webpack-serve": "^1.0.2",
    "xmlbuilder": "^10.0.0"
  },
  "scripts": {
    "build": "webpack --config webpack.config.js && webpack --config webpack-lean.config.js",
    "build-examples": "node examples/build.js && webpack --config webpack-examples.config.js",
    "build-website-examples": "node examples/build-website.js && webpack --config webpack-website-examples.config.js",
    "build-tutorials": "node tutorials/build.js && webpack --config webpack-tutorials.config.js",
    "build-website-tutorials": "node tutorials/build-website.js && webpack --config webpack-website-tutorials.config.js",
    "lint": "eslint --cache .",
    "puglint": "pug-lint src examples",
    "test": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch,PhantomJS",
    "test-all": "GEOJS_TEST_CASE=tests/test-unit.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch,PhantomJS",
    "start": "karma start karma.conf.js",
    "glci": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "glci-all": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch",
    "headedci": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeFull",
    "headedci-all": "GEOJS_TEST_CASE=tests/test-headed.js karma start karma-cov.conf.js --single-run --browsers ChromeWithProxy,FirefoxWithProxy",
    "tutorialsci": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,PhantomJS",
    "tutorialsci-all": "GEOJS_TEST_CASE=tests/tutorials.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch,FirefoxHeadlessTouch,PhantomJS",
    "test-webgl": "GEOJS_TEST_CASE=tests/test-gl.js karma start karma-cov.conf.js --single-run --browsers ChromeHeadlessTouch",
    "test-headed": "GEOJS_TEST_CASE=tests/test-headed.js xvfb-run -s '-ac -screen 0 1280x1024x24' karma start karma-cov.conf.js --single-run --browsers ChromeWithProxy",
    "codecov": "codecov",
    "combine-coverage": "istanbul-combine -d dist/cobertura -r cobertura 'dist/coverage/json/**/coverage-final.json'",
    "examples": "webpack-dev-server --config webpack-examples.config.js --host ${HOST-127.0.0.1} --port ${PORT-8082} --content-base dist/",
    "start-test": "node examples/build.js; forever start ./tests/runners/server.js",
    "stop-test": "forever stop ./tests/runners/server.js",
    "docs": "jsdoc --pedantic -d dist/apidocs -r src package.json -c jsdoc.conf.json",
    "website": "cd website && npx hexo server",
    "setup-website": "cd website && npm install",
    "build-website": "npm run build && cp -a dist/built/. website/source/built && npm run build-website-examples && npm run build-website-tutorials && npm run docs && cd dist && find data \\( -name tiles -o -name base-images -o -name '*-hash-stamp' -o -name '*.tgz' \\) -prune -o \\( -print0 \\) | cpio -pmdL0 ../website/source && cp -ar apidocs/. ../website/source/apidocs && cd ../website && npm install && rm -f db.json && npx hexo generate",
    "prepublishOnly": "webpack --config webpack.config.js && webpack --config webpack-lean.config.js && cp dist/built/*.js ."
  },
  "keywords": [
    "map",
    "gis",
    "webgl",
    "svg"
  ],
  "main": "geo.lean.js"
}
